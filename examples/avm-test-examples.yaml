# yaml-language-server: $schema=../schema.json
name: Test Examples
description: Runs terraform init, terraform plan, and terraform apply, then terraform plan to check for idempotency.
commands:
  - type: copycwdtotemp
    name: Copy to temp
    cwd: "."

  - type: foreachdirectory
    name: for each example
    depth: 1
    include_hidden: false
    working_directory: "./examples"
    env:
      TF_IN_AUTOMATION: "1"
    mode: parallel
    working_directory_strategy: "item_relative"
    commands:
      - type: shell
        name: Clean Terraform
        command_line: |
          echo $(pwd) && \
          find . -type d -name .terraform | xargs -n1 rm -rf && \
          find . -type f -name .terraform.lock.hcl | xargs -n1 rm -f && \
          find . -type f -name *.tfstate* | xargs -n1 rm -f

      - type: shell
        name: Terraform Init
        command_line: terraform init

      - type: shell
        name: Terraform Plan
        command_line: terraform plan -out tfplan

      - type: shell
        name: Terraform Apply
        command_line: terraform apply -auto-approve tfplan

      - type: shell
        name: Terraform Plan Idempotency Check
        command_line: terraform plan -detailed-exitcode -out tfplan

        # This command will run if the previous plan was not idempotent
        # and will output the plan to stderr.
      - type: shell
        name: Terraform Show Plan (if not idempotent)
        command_line: terraform show tfplan 1>&2
        runs_on_condition: exit-codes
        runs_on_exit_codes: [2]
        success_exit_codes: []

      - type: shell
        name: Terraform Destroy
        command_line: terraform destroy -auto-approve
        runs_on_condition: always

  - type: shell
    name: Clean up
    command_line: |
      rm -fr $(pwd)
    runs_on_condition: always
